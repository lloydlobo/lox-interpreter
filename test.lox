// test.lox


fun hello() {
    print "hello world from lox";
}

if (true) {
    print("# Functions");

    hello();
}



if (true) {
    print("# For Loops");

    // Print the first n elements in the Fibonacci sequence
    var a = 0;
    var iterations = 8; // e.g. 21 elements in 10000 iterations
    var temp;
    for (var b = 1; a < iterations; b = temp + b) {
        print a;
        temp = a;
        a = b;

        var is_implemented = false;
        if (is_implemented) {
            if (b > 29) {
                print "break inside fibonacci sequence";
                break;
            }
        }
    }
}


if (true) {
    print("# While Loops");

    var counter = 0;
    while (counter < 4) {
        print counter;
        counter = counter + 1;
    }
}

if (false) {
    print("# Logical Operators");

    var logical = (1 or 2);
    print logical; // 1
    print "hi" or 2; // hi
    print 0 or 2; // 0
    print nil or 2; // 2
    print nil and 2; // nil
    print true and false; // false
    print true and (1==2); // false
    print !(1 == 2) and !(3 == 4); // true
}


if (true) {
    print("# Conditional execution");

    if (true) {
        print "1122" ;
    }

    if (2 == 3) {
        print "inside if statement 1" ;
        print "inside if statement 2" ;
    } else {
        print("inside else statement 1");
        if (1 == 1) {
            print "inside else inside if statement a" ;
            print "inside else inside if statement b" ;
        }
    }
}

if (false) {
    print("# Parse expression");

    var _ = (100 + (1111 * 2)); // discarded
    var foo = "before";
    print foo;
    var foo = "after";
    print foo;

    var baz = "before";
    print baz;
    var baz = "after";
    print baz;

    var quz = 73 + 26 * 20;
    print quz;
    var hello = 26 * 20;
    print quz + hello;
    var foo;
    print foo;
}

if (false) {
    print("# Scopes - 1/3");

    {
        var a = "first";
        print a; // "first".
    }
    {
        var a = "second";
        print a; // "second".
    }


    print("# Scopes - 2/3");

    var bar = "global bar";
    var world = "global world";
    var hello = "global hello";
    {
        var bar = "outer bar";
        var world = "outer world";
        {
            var bar = "inner bar";
            print bar;
            print world;
            print hello;
        }
        print bar;
        print world;
        print hello;
    }
    print bar;
    print world;
    print hello;

    print("# Scopes - 3/3");

    var baz = (91 * 16) - 61;
    {
        var world = "quz" + "89";
        print world;
    }
    print baz;

}


if (false) {
    print("# Block Syntax");

    {
        var hello = 88;
        {
            var foo = 88;
            print foo;
        }
        print hello;
    }
}

// see `:h modeline`
// vim: set sts=4 sw=4 et
